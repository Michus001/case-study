openapi: 3.0.3
info:
  title: Orders api
  description: Api for managing orders
  contact:
    email: tomas@michalicka.com
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /order:
    post:
      operationId: createOrder
      description: Endpoint to create order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithId'
          description: Order created
        400:
          description: Invalid user input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Order was not found
        500:
          description: General error
  /order/{orderId}/pay:
    patch:
      operationId: payOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Order was paid
        400:
          description: Invalid user input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Order was not found
        500:
          description: General error
  /order/{orderId}/cancel:
    patch:
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Order was cancelled
        400:
          description: Invalid user input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Order was not found
        500:
          description: General error

components:
  schemas:
    OrderedProduct:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 0
        unit:
          type: string
    Order:
      type: object
      properties:
        products:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderedProduct'
    OrderWithId:
      allOf:
        - $ref: '#/components/schemas/Order'
        - type: object
          properties:
            id:
              type: string
              format: uuid
    Error:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        otherData:
          type: object
